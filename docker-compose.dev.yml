services:
  loki:
    image: grafana/loki:3.4.4
    container_name: loki-dev
    restart: always
    ports:
      - "127.0.0.1:3100:3100"
    networks:
      - app-network

  promtail:
    image: grafana/promtail:3.4.4
    container_name: promtail-dev
    restart: always
    volumes:
      - ./docker/promtail-config.yaml:/etc/promtail/config.yaml
      - ./logs:/var/log/backend
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus-dev
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana-dev
    restart: always
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - ./docker/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./docker/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce:2.30.0
    restart: always
    container_name: portainer-dev
    privileged: true
    ports:
      - "127.0.0.1:9443:9443"
      - "127.0.0.1:9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network

  adminer:
    image: adminer:5.3.0
    restart: always
    container_name: adminer-dev
    privileged: true
    ports:
      - "127.0.0.1:8081:8080"
    networks:
      - app-network

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql.Dockerfile
    user: root
    restart: always
    container_name: mysql-dev
    privileged: true
    env_file:
      - .env.docker
    ports:
      - "127.0.0.1:3307:3306"
    networks:
      - app-network

  neo4j:
    build:
      context: .
      dockerfile: ./docker/neo4j.Dockerfile
    user: root
    restart: always
    container_name: neo4j-dev
    privileged: true
    ports:
      - "127.0.0.1:7687:7687"
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7473:7473"
    command: ['./init-neo4j.sh']
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    user: root
    restart: always
    container_name: backend-dev
    privileged: true
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - mysql
      - neo4j
    volumes:
      - ./src:/usr/src/app/src
      - ./logs:/usr/src/app/logs
    env_file:
      - .env.docker
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    user: root
    restart: always
    container_name: frontend-dev
    privileged: true
    depends_on:
      - backend
    ports:
      - "127.0.0.1:5173:5173"
    env_file:
      - .env.docker
    networks:
      - app-network

volumes:
  portainer_data:

networks:
  app-network:
    driver: bridge
