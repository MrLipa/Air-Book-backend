services:
  portainer:
    image: portainer/portainer-ce:2.30.0
    profiles: ["dev"]
    restart: always
    container_name: portainer-dev
    privileged: true
    ports:
      - "9443:9443"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql.dev.Dockerfile
    profiles: ["dev", "prod"]
    user: root
    restart: always
    container_name: mysql
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: air_book
      MYSQL_USER: adminer
      MYSQL_PASSWORD: adminer123
    ports:
      - "3306:3306"
    networks:
      - app-network

  adminer:
    image: adminer:5.3.0
    profiles: ["dev"]
    restart: always
    container_name: adminer
    privileged: true
    depends_on:
      - mysql
    links:
      - mysql
    ports:
      - "82:8080"
    networks:
      - app-network

  neo4j:
    build:
      context: .
      dockerfile: ./docker/neo4j.dev.Dockerfile
    profiles: ["dev", "prod"]
    user: root
    restart: always
    container_name: neo4j
    privileged: true
    ports:
      - "7687:7687"
      - "7474:7474"
      - "7473:7473"
    command: ["./init-db.sh"]
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: ./docker/backend.dev.Dockerfile
    profiles: ["dev", "prod"]
    user: root
    restart: always
    container_name: backend
    privileged: true
    ports:
      - '3000:3000'
    depends_on:
      - mysql
      - neo4j
    command: npm run start
    networks: 
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 120s
      timeout: 10s
      retries: 5

volumes:
  portainer_data:

networks:
  app-network:
    driver: bridge
